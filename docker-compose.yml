version: '3.8'

services:
  # Oracle Database
  oracle-db:
    image: gvenzl/oracle-xe:21-slim
    container_name: mortgage-oracle-db
    environment:
      ORACLE_PASSWORD: oracle123
      ORACLE_DATABASE: MORTGAGEDB
      ORACLE_USER: mortgage_user
      ORACLE_PASSWORD_USER: mortgage_pass
    ports:
      - "1521:1521"
    volumes:
      - oracle_data:/opt/oracle/oradata
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/sample-data.sql:/docker-entrypoint-initdb.d/02-sample-data.sql
    healthcheck:
      test: ["CMD", "sqlplus", "-L", "mortgage_user/mortgage_pass@localhost:1521/XE", "@/dev/null"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - mortgage-network
    restart: unless-stopped

  # Backend Application
  mortgage-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mortgage-backend
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:oracle:thin:@oracle-db:1521:XE
      SPRING_DATASOURCE_USERNAME: mortgage_user
      SPRING_DATASOURCE_PASSWORD: mortgage_pass
      JWT_SECRET: myVerySecretKeyForProductionUse123!
      FILE_STORAGE_DIR: /app/uploads
    ports:
      - "8080:8080"
    volumes:
      - uploads_data:/app/uploads
      - ./logs:/app/logs
    depends_on:
      oracle-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - mortgage-network
    restart: unless-stopped

  # Frontend Application (React)
  mortgage-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mortgage-frontend
    environment:
      REACT_APP_API_BASE_URL: http://localhost:8080/api
      REACT_APP_ENVIRONMENT: development
    ports:
      - "3000:3000"
    depends_on:
      - mortgage-backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - mortgage-network
    restart: unless-stopped

  # Redis (for session management and caching - optional)
  redis:
    image: redis:7-alpine
    container_name: mortgage-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass redis123
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - mortgage-network
    restart: unless-stopped

  # Nginx (Reverse Proxy)
  nginx:
    image: nginx:alpine
    container_name: mortgage-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - mortgage-backend
      - mortgage-frontend
    networks:
      - mortgage-network
    restart: unless-stopped

volumes:
  oracle_data:
    driver: local
  uploads_data:
    driver: local
  redis_data:
    driver: local

networks:
  mortgage-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16